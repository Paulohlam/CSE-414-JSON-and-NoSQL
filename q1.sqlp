DROP DATAVERSE geo IF EXISTS;
 CREATE DATAVERSE geo;
 
 CREATE TYPE worldType AS {auto_id:uuid };
 CREATE DATASET world(worldType)  PRIMARY KEY auto_id AUTOGENERATED;
 LOAD DATASET world USING localfs
         (("path"="127.0.0.1:///UW/CSE 414/HW 7/mondial.adm"),("format"="adm"));

 CREATE DATASET country(worldType)  PRIMARY KEY auto_id AUTOGENERATED;
 LOAD DATASET country USING localfs
         (("path"="127.0.0.1:///UW/CSE 414/HW 7/country.adm"),("format"="adm"));

 CREATE DATASET mountain(worldType)  PRIMARY KEY auto_id AUTOGENERATED;
 LOAD DATASET mountain USING localfs
         (("path"="127.0.0.1:///UW/CSE 414/HW 7/mountain.adm"),("format"="adm"));

 CREATE DATASET sea(worldType)  PRIMARY KEY auto_id AUTOGENERATED;
 LOAD DATASET sea USING localfs
         (("path"="127.0.0.1:///UW/CSE 414/HW 7/sea.adm"),("format"="adm"));

*/
Retrieve the names of all cities located in Peru, sorted alphabetically. 
Name your output attribute city. 
[Result Size: 30 rows of {"city":...}
select city in Peru. If city is not in Peru rep. If city is a part, add. sort by name 

0.29 seconds
*/

SELECT a.name as city
FROM world x, x.mondial.country y, y.province z,
(CASE WHEN is_array(z.city) THEN z.city
ELSE [z.city] END) a
WHERE y.name='Peru'
ORDER BY a.name;
