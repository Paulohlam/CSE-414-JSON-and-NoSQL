/* 
Find all countries bordering two or more seas. Here you need to join the "sea" collection with the "country" collection. For each country in your list, return its code, its name, and the list of bordering seas, in decreasing order of the number of seas. 

Name your output attributes country_code, country_name, seas. The attribute seas should be a list of objects, each with the attribute sea. 

select select joining sea and country. Layout will be seas which contains counties with more than 2 seas. determine by looking at arrary? arrange sea in alphabetical orer and seas in number order with most seas on top. Each row is going to need the seas country code and country name
SELECT y.name AS countryName, m AS mountainList 
FROM world x, x.mondial.country y 
LET m = ( SELECT z.name AS mountain
FROM world x2, x2.mondial.mountain z, split(z.`-country`, ' ') r 
WHERE y.`-car_code` = r);

0.247 seconds 

*/

SELECT * 
FROM world x, x.mondial.country y,	
(SELECT value a.name
	FROM sea as a 
	WHERE  y.`-car_code` in split(a.`-country`, " ") 
	ORDER BY a.name ASC) as b
GROUP BY y.name as country_name, y.`-car_code` as country_code group as seas(b as sea)
HAVING array_count(seas)>=2
ORDER BY array_count(seas) DESC;

